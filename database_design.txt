Notes:
    - We need to deal with the concept of flagged notes.
        - Answer from Andrew - they just want to be able to pull up all notes with "flags"
          set on them from the "ChildAssessments", "ChildNotes", and "ChildPartners" tables.
    - Attachments TBD
    - Photo handling TBD

-- The databases are basically either entities or relationships.

---------- Entities ----------

CREATE TABLE IF NOT EXISTS Child (
ID CHAR(16),
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
Nickname NVARCHAR(255),
Sex CHAR(1),
BirthDate DATE,
ChildPhoto BLOB,
AbandonmentDate DATE,
ProgramEntryDate DATE,
ProgramDepartureDate DATE,
ProgramDepartureReason TEXT,
ChildHistory TEXT,
IsActive BOOL,
MedicalHistory TEXT,
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS Partner (
ID CHAR(16),
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
Email NVARCHAR(255),
Address NVARCHAR(255),
Phone NVARCHAR(255),
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS Specialist (
ID CHAR(16)
AssessmentSpecialty NVARCHAR(255),
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS AssessmentType (
ID CHAR(16)
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS MilestoneTypeCategory (
ID CHAR(16),
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS MilestoneType (
ID CHAR(16),
MilestoneCategory CHAR(16),
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
PRIMARY KEY (ID),
CONSTRAINT fk_MilestoneCategory 
FOREIGN KEY (MilestoneCategory)
REFERENCES MilestoneTypeCategory(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS DoctorType (
ID CHAR(16),
DoctorType NVARCHAR(255),
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS Doctor (
ID CHAR(16),
DoctorType CHAR(16),
FacilityEnglishName NVARCHAR(255),
FacilityChineseName NVARCHAR(255),
FacilityPinyinName NVARCHAR(255),
DoctorEnglishName NVARCHAR(255),
DoctorChineseName NVARCHAR(255),
DoctorPinyinName NVARCHAR(255),
PRIMARY KEY (ID),
CONSTRAINT fk_DoctorType 
FOREIGN KEY (DoctorType)
REFERENCES DoctorType(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS MeasurementType (
ID CHAR(16),
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
Units NVARCHAR(255),
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS Caregiver (
ID CHAR(16),
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS Camp (
ID CHAR(16),
EnglishCampName NVARCHAR(255),
ChineseCampName NVARCHAR(255),
PinyinCampName NVARCHAR(255)
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS Medication (
ID CHAR(16),
EnglishName NVARCHAR(255),
ChineseName NVARCHAR(255),
PinyinName NVARCHAR(255),
DoseInMilligrams FLOAT,
PRIMARY KEY (ID)
)

CREATE TABLE IF NOT EXISTS MedicalCondition (
ID CHAR(16),
EnglishName NVARCHAR(255),
PinyinName NVARCHAR(255),
ChineseName NVARCHAR(255),
PRIMARY KEY (ID)
)

-------- Relationships ---------

CREATE TABLE IF NOT EXISTS ChildPartner (
ChildID CHAR(16),
PartnerID CHAR(16),
StartDate DATE,
EndDate DATE,
Notes TEXT,
Flag BOOL,
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_PartnerID
FOREIGN KEY (PartnerID)
REFERENCES Partner(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildNote (
ChildID CHAR(16),
NoteDate DATE,
Notes TEXT,
Flag BOOL,
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildCamp (
ChildID CHAR(16),
CampID CHAR(16),
CampStartDate DATE,
Notes TEXT,
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_CampID 
FOREIGN KEY (CampID)
REFERENCES Camp(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildAssessment (
ChildID CHAR(16),
SpecialistID CHAR(16)
AssessmentTypeID CHAR(16)
AssessmentDate DATE,
Notes TEXT,
Flag BOOL,
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_SpecialistID 
FOREIGN KEY (SpecialistID)
REFERENCES Specialist(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_AssessmentTypeID
FOREIGN KEY (AssessmentTypeID)
REFERENCES AssessmentType(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildCaregiverHistory (
ChildID CHAR(16),
CaregiverID CHAR(16),
StartDate DATE,
EndDate DATE,
Notes TEXT
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_CaregiverID
FOREIGN KEY (CaregiverID)
REFERENCES Caregiver(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildMeasurement (
ChildID CHAR(16),
MeasurementID CHAR(16),
MeasurementDate DATE,
MeasurementValue FLOAT,
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_MeasurementID
FOREIGN KEY (MeasurementID)
REFERENCES Measurement(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildMilestone (
ChildID CHAR(16),
MilestoneID CHAR(16),
DateReached DATE,
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_MilestoneID
FOREIGN KEY (MilestoneID)
REFERENCES Milestone(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildDoctorVisitHistory (
ChildID CHAR(16),
DoctorID CHAR(16),
VisitDate DATE,
Notes TEXT,
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_DoctorID
FOREIGN KEY (DoctorID)
REFERENCES Doctor(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildMedicalCondition (
ChildID CHAR(16),
ConditionID CHAR(16),
CONSTRAINT fk_ChildID 
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_ConditionID
FOREIGN KEY (ConditionID)
REFERENCES Condition(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

CREATE TABLE IF NOT EXISTS ChildMedication (
ChildID CHAR(16),
MedicationID CHAR(16),
IsActive BOOL,
StartDate DATE,
EndDate DATE,
Dosage1 FLOAT,
Dosage2 FLOAT,
Dosage3 FLOAT,
CONSTRAINT fk_ChildID
FOREIGN KEY (ChildID)
REFERENCES Child(ID)
ON DELETE CASCADE
ON UPDATE CASCADE,
CONSTRAINT fk_MedicationID
FOREIGN KEY (MedicationID)
REFERENCES Medication(ID)
ON DELETE CASCADE
ON UPDATE CASCADE
)

